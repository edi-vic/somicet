---
import stemCells1 from "@assets/cells/stemCells1.png"
import stemCells2 from "@assets/cells/stemCells2.png"
import stemCells3 from "@assets/cells/stemCells3.png"
import stemCells4 from "@assets/cells/stemCells4.png"
import stemCells5 from "@assets/cells/stemCells5.png"

const arrInfoCells = [
  {
    img: stemCells1,
    title: "Células Estromales Mesenquimales",
    info: "Las Células Troncales/Estromales Mesenquimales (MSCs) son células multipotenciales con la capacidad de generar diversos tipos celulares como adipocitos, osteoblastos y condroblastos. Estudios han demostrado que también desempeñan un papel importante en la formación de células hematopoyéticas y en la regulación de la respuesta inmunológica antitumoral."
  },
  {
    img: stemCells2,
    title: "Células Troncales Neurales y Hematopoyéticas.",
    info: "Las células troncales neurales desempeñan un papel clave en la investigación al generar varios tipos de neuronas y células gliales en el sistema nervioso. Su capacidad para reparar tejido neural dañado es prometedora para trastornos neurológicos y lesiones cerebrales. Las células troncales hematopoyéticas son esenciales para producir células sanguíneas e inmunitarias, abriendo posibilidades en el estudio de trastornos sanguíneos y el desarrollo de tratamientos innovadores. Ambos tipos de células troncales avanzan en la medicina regenerativa y mejoran la comprensión de sus respectivas áreas"
  },
  {
    img: stemCells3,
    title: "Células Troncales y Regeneración",
    info: "'Célula Troncal' y 'Regeneración' son conceptos interrelacionados. Las células troncales, con su capacidad de transformación, fundamentan las estrategias de regeneración en Medicina Regenerativa. Los investigadores, ampliando el conocimiento, están superando límites y haciendo posible lo que parecía imposible."
  },
  {
    img: stemCells4,
    title: "Células Troncales Pluripotenciales.",
    info: "Las células embrionarias humanas y las células inducidas son tipos de células troncales pluripotentes. Su capacidad de reprogramación y diferenciación en tres linajes germinales ha mejorado la comprensión de enfermedades genéticas, desarrollo y creación de fármacos. Las células iPSC también han posibilitado la terapia personalizada y podrían ser utilizadas en tratamientos futuros."
  },
];

---
<section 
  class="topics"
  id="topics"
>
  <div class="topics__container">

    {arrInfoCells.map((data) =>
    <div 
      class="topics__photo-section"
    >

      <img 
        src={data.img} 
        alt=""
      >
      <div 
        class="topics__info-section"
      >
        <h2>
          {data.title}
        </h2>
        <p>
          {data.info}
        </p>
      </div>
    </div>
    )}
  </div>
  
  <div 
    class="topics__dot-imgs"
    id="dots-img"
  >
    {arrInfoCells.map((item) =>
      <img
        src={item.img} 
        class="topics__dots"
        id="dots"
      >
      
    )}
  </div>
</section>
<script>
  {
    const slider = document.getElementById('topics');
   
    
    const interval = 2800;
    const animDuration = 600;
    const sliderImgs = document.querySelectorAll('.topics__photo-section');
    const dotImage =  document.querySelectorAll(".topics__dots");
    

    let currImg = 0;
    let prevImg = sliderImgs.length - 1;
    let intrvl;
    let timeout;
    
    for(let i = 0; i < dotImage.length; i ++){
      dotImage[i].addEventListener("click", dotClick.bind(null, i), false)
    }

    dotImage[0].classList.add("topics__dots--active")
    sliderImgs[0].style.left = "0";

    timeout= setTimeout (() => {
      animateSlider();
      sliderImgs[0].style.left = "";
      intrvl = setInterval(animateSlider, interval);
    }, interval - animDuration);
    
    function animateSlider(nextImg, right){
      if (!nextImg)
        nextImg = currImg + 1 < sliderImgs.length ? currImg + 2 : 1;

      --nextImg;
      sliderImgs[prevImg].style.animationName = "";

      if (!right) {
        sliderImgs[nextImg].style.animationName = "leftNext";
        sliderImgs[currImg].style.animationName = "leftCurr";
      } 
      else {
        sliderImgs[nextImg].style.animationName = "rightNext";
        sliderImgs[currImg].style.animationName = "rightCurr";
      }

      prevImg = currImg;
      currImg = nextImg;
      let currDot;
      let prevDot;
      currDot = dotImage[currImg];
      currDot.classList.add("topics__dots--active");
      prevDot = dotImage[prevImg];
      prevDot.classList.remove("topics__dots--active");

    }



    function dotClick(num){
      if (num == currImg){
        return false;
      }

      clearTimeout(timeout);
      clearInterval(intrvl);

      if (num > currImg){
        animateSlider(num + 1);

      }else{
        animateSlider(num + 1, true);
      }
      intrvl = setInterval(animateSlider, interval);
    }
    
    
  }
</script>
<style lang="scss">
  @import "@assets/library";
  .topics{
    width: 100%;
    height: 820px;
    background: $background-color;
    overflow: hidden;
    position: relative;
    
    @media (max-width: 768px){
      height: 750px;
      background: $primary-color-600;
    }
    &__container{
      
      display: flex;
      width: 100%;
     
    }
    &__photo-section{
      display: flex;
      justify-content: center;
      left: 100%;
      width: 100%;
      height: 580px;
      position: absolute;
      animation: .6s cubic-bezier(0.645, 0.045, 0.355, 1) 0s left;
      animation-fill-mode: forwards;
      @media (max-width: 768px){
        height: auto;
        flex-direction: column;
      }
      & img{
        width: 50%;
        @media (max-width: 768px){
          padding: 40px 40px 20px;
          width: 100%;
          height: auto;
        }
      }
      
    }
    &__info-section{
      background:$primary-color-600;
      width: 50%;
      display:flex;
      flex-direction:column;
      padding: 0 40px 40px;
      justify-content: flex-end;
      color: $white;
      @media (max-width: 768px){
        width: 100%;
        padding: 0 40px 20px;
        justify-content: center;
      }
      & h2{
        font-size: 32px;
        line-height: 36px;
        font-weight:700;
        margin-bottom: 30px;
        @media (max-width: 768px){
          font-size: 20px;
          line-height: 24px;
          margin-bottom: 10px;
        }
      }
      & p{
        font-size: 14px;
        line-height: 18px;
        font-weight: 400;
        @media (max-width: 768px){
          font-size: 12px;
          line-height: 16px;
        }
      }
    }
    &__dot-imgs{
      width: 100%;
      height: 240px;
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: $background-color;
      position:absolute;
      bottom: 0;
      @media (max-width: 768px){
        height: 85px;
      }
    }
    &__dots{
      width: 210px;
      height: 150px;
      margin-right: 25px;
      @media (max-width: 768px){
        width: 70px;
        height: 50px;
        margin-right: 13px;
      }
      &--active{
        width: 230px;
        height: 170px;
        box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.35);
        @media (max-width: 768px){
          width: 90px;
          height: 70px;
        }
      }
    }
  }

@keyframes leftNext {
  from { left: 100%; }
  to { left: 0; }
}

@keyframes leftCurr {
  from { left: 0; }
  to { left: -100%; }
}

@keyframes rightNext {
  from { left: -100%; }
  to { left: 0; }
}

@keyframes rightCurr {
  from { left: 0; }
  to { left: 100%; }
}

</style>